name: Build and Push Docker Image

on:
  push:
    branches:
      - 'main'
    paths:
      - 'Dockerfile'
      - 'slim_requirements.txt'
      - 'full_requirements.txt'
      - '.github/workflows/docker-build.yml'
  # Note: To save workflow time, let us NOT run the image build on PRs (mainly due to dependabot)
  # pull_request:
  #  branches:
  #    - main
  #  paths:
  #    - 'Dockerfile'
  #    - 'full_requirements.txt'
  #    - 'slim_requirements.txt'

env:
  REGISTRY: docker.io
  #IMAGE_NAME: ${{ github.repository }}
  IMAGE_NAME: sceptri/amml-python-base


jobs:
  test-secrets:
    runs-on: ubuntu-latest
    steps: # Add this job to test if secrets are available
      - name: Check if secrets are set
        run: |
          if [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
            echo "DOCKERHUB_USERNAME is not set"
            exit 1
          fi
          if [ -z "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
            echo "DOCKERHUB_TOKEN is not set"
            exit 1
          fi
          echo "All secrets are properly configured"
  build-and-push:
    timeout-minutes: 200

    strategy:
      fail-fast: false
      matrix:
        # ROCm version is now officially un-supported
        hardware: ["cpu", "cuda"]
        target: ["slim", "full"]

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # - name: Log in to GitHub Container Registry
      #  uses: docker/login-action@v3
      #  with:
      #    registry: ${{ env.REGISTRY }}
      #    username: ${{ github.actor }}
      #    password: ${{ secrets.GITHUB_TOKEN }}

       # Optional: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.hardware }}${{ (matrix.target == 'slim') && '-slim' || '' }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      # The build process for the ROCm image fails due to the large size of the image
      # That is why we remove this hopefully unnecessary large folder
      # https://github.com/orgs/community/discussions/25678#discussioncomment-5242449
      # https://github.com/docker/build-push-action/issues/968#issuecomment-1720992335
      - name: Free disk space on Ubuntu runner ðŸ”§
        uses: kfir4444/free-disk-space@main
        with:
          # frees about 6 GB, warning: may remove required tools
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            hardware=${{ matrix.hardware }}
          target: ${{ matrix.target }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Only provide the ARM64 build for the CPU version
          platforms: linux/amd64${{ (matrix.hardware == 'cpu') && ',linux/arm64' || '' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}